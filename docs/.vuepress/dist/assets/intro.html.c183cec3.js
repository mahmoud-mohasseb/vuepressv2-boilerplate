import{_ as a,r as t,o,c as r,a as e,b as i,d as s,e as c}from"./app.a8ea48db.js";const d={},l=e("h1",{id:"getstarted",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getstarted","aria-hidden":"true"},"#"),s(" getstarted")],-1),u=e("h2",{id:"browser-api-access-restrictions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#browser-api-access-restrictions","aria-hidden":"true"},"#"),s(" Browser API Access Restrictions")],-1),p=s("Because VuePress applications are server-rendered in Node.js when generating static builds, any Vue usage must conform to the "),m={href:"https://ssr.vuejs.org/en/universal.html",target:"_blank",rel:"noopener noreferrer"},h=s("universal code requirements"),_=s(". In short, make sure to only access Browser / DOM APIs in "),v=e("code",null,"beforeMount",-1),b=s(" or "),g=e("code",null,"mounted",-1),k=s(" hooks."),f=c(`<p>If you are using or demoing components that are not SSR friendly (for example containing custom directives), you can wrap them inside the built-in <code>&lt;ClientOnly&gt;</code> component:</p><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token comment">&lt;!-- This will be kept as is by default --&gt;</span>

1 + 2 + 3 = {{ 1 + 2 + 3 }}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token comment">&lt;!-- This will be compiled by Vue --&gt;</span>
1 + 2 + 3 = 6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// This won&#39;t be compiled correctly because of js syntax highlighting</span>
<span class="token keyword">const</span> onePlusTwoPlusThree <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function w(x,y){const n=t("ExternalLinkIcon");return o(),r("div",null,[l,u,e("p",null,[p,e("a",m,[h,i(n)]),_,v,b,g,k]),f])}const j=a(d,[["render",w],["__file","intro.html.vue"]]);export{j as default};
